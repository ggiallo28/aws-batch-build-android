---
AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Project:
    Type: String

  GitHubRepo:
    Type: String

  GitHubBranch:
    Type: String

  GitHubToken:
    Type: String
    NoEcho: true

  GitHubUser:
    Type: String

  VpcStackName:
    Type: String

  KmsKeyArn:
    Type: String
    Default: arn:aws:kms:eu-west-1:438591499564:key/025471da-37d7-4127-aae7-02cf06f69cf4

  ECRImage:
    Type: String
    Default: 438591499564.dkr.ecr.eu-west-1.amazonaws.com/android-build

  GitTag:
    Type: String
    Default: latest

Resources:
  Repository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName : !Join ["-",[!Ref Project, "ecr"]]
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
              "rules": [
                  {
                      "rulePriority": 1,
                      "description": "Keep only one untagged image, expire all others",
                      "selection": {
                          "tagStatus": "untagged",
                          "countType": "imageCountMoreThan",
                          "countNumber": 1
                      },
                      "action": {
                          "type": "expire"
                      }
                  },
                  {
                      "rulePriority": 2,
                      "description": "Keep only ten images, expire all others",
                      "selection": {
                          "tagStatus": "any",
                          "countType": "imageCountMoreThan",
                          "countNumber": 10
                      },
                      "action": {
                          "type": "expire"
                      }
                  }
              ]
          }

  CloudFormationTrustPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Join ["-",[!Ref Project, "cfn-policy"]]
      PolicyDocument:
        Statement:
        - Action:
          - cloudformation:CreateStack
          - cloudformation:DeleteStack
          - cloudformation:GetTemplate
          - cloudformation:List*
          - cloudformation:UpdateStack
          - cloudformation:Describe*
          - cloudformation:CreateChangeSet
          - cloudformation:ExecuteChangeSet
          Effect: Allow
          Resource: "*"
            #- !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${Project}*'
      Roles:
        - !Ref CloudFormationTrustRole
        - !Ref CodeBuildServiceRole
        - !Ref CodePipelineServiceRole


  CloudFormationTrustRole:
    Type: AWS::IAM::Role
    Description: Creating service role in IAM for AWS CloudFormation
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - cloudformation.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSBatchFullAccess
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/IAMFullAccess



  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName : !Join ["-",[!Ref Project, "codebuild-role"]]
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
              - Resource: !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${Repository}
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName : !Join ["-",[!Ref Project, "codepipeline-role"]]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - ecs:DescribeServices
                  - ecs:DescribeTaskDefinition
                  - ecs:DescribeTasks
                  - ecs:ListTasks
                  - ecs:RegisterTaskDefinition
                  - ecs:UpdateService
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - iam:PassRole

  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName : !Join ["-",[!Ref Project, !Ref GitHubUser]]

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - $(aws ecr get-login --no-include-email)
                - TAG="$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
                - IMAGE_URI="${REPOSITORY_URI}:${TAG}"
            build:
              commands:
                - docker build --tag "$IMAGE_URI" .
            post_build:
              commands:
                - docker push "$IMAGE_URI"
                - printf '{"Parameters" :{"ImageTag":"%s"}}' "$TAG" > parameters.json
          artifacts:
            files:
              - parameters.json
              - cloudformation/aws_batch/batch_template_cfn.yml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:17.09.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}
      Name: !Ref AWS::StackName
      ServiceRole: !Ref CodeBuildServiceRole

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: App
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: GenerateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                ChangeSetName: !Join ["-", [!Ref Project, "changeset"]]
                ParameterOverrides: !Sub
                  - >
                    {
                      "Project":"${PROJECT}",
                      "VpcStackName":"${VPCSTACKNAME}",
                      "KmsKeyArn":"${KMSKEYARN}",
                      "ImageName":"${IMAGENAME}"
                    }
                  - {
                      PROJECT: !Ref Project,
                      VPCSTACKNAME: !Ref VpcStackName,
                      KMSKEYARN: !Ref KmsKeyArn,
                      IMAGENAME: !Ref Repository
                    }
                RoleArn: !GetAtt 'CloudFormationTrustRole.Arn'
                StackName: !Ref Project
                TemplateConfiguration: 'BuildArtifact::parameters.json'
                TemplatePath: 'BuildArtifact::cloudformation/aws_batch/batch_template_cfn.yml'
              InputArtifacts:
              - Name: BuildArtifact
              OutputArtifacts: [
                ]
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Join ["-", [!Ref Project, "changeset"]]
                StackName: !Ref Project
              InputArtifacts: [
                ]

              OutputArtifacts: [
                ]
              RunOrder: 2
Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}

  BucketName:
    Value: !Ref ArtifactBucket
    Export:
      Name: ArtifactBucket
